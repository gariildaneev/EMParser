import logging
from logging.handlers import RotatingFileHandler


class Logger:
    """–ö–ª–∞—Å—Å –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –ª–æ–≥–≥–µ—Ä–∞ (Singleton)."""

    _instance = None  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –ª–æ–≥–≥–µ—Ä–∞

    def __new__(cls):
        """–†–µ–∞–ª–∏–∑—É–µ–º Singleton: —Å–æ–∑–¥–∞—ë–º —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä –ª–æ–≥–≥–µ—Ä–∞."""
        if cls._instance is None:
            cls._instance = super(Logger, cls).__new__(cls)
            cls._instance._initialize_logger()
        return cls._instance

    def _initialize_logger(self):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ª–æ–≥–≥–µ—Ä."""
        self.logger = logging.getLogger("ParserLogger")
        self.logger.setLevel(logging.DEBUG)  # –û–±—â–∏–π —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–æ–≤ (–¥–ª—è —Ñ–∞–π–ª–∞)

        # üîπ –§–æ—Ä–º–∞—Ç –¥–ª—è —Ñ–∞–π–ª–∞ (–ø–æ–¥—Ä–æ–±–Ω—ã–π)
        file_formatter = logging.Formatter(
            "%(asctime)s - %(name)s - %(levelname)s - [%(filename)s:%(lineno)d] - %(message)s",
            datefmt="%Y-%m-%d %H:%M:%S"
        )

        # üîπ –§–æ—Ä–º–∞—Ç –¥–ª—è —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ (–±–æ–ª–µ–µ —á–∏—Ç–∞–µ–º—ã–π)
        console_formatter = logging.Formatter(
            "%(levelname)s: %(message)s"
        )

        # üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–∞–π–ª–∞ (–≤—Å—ë –ø–∏—à–µ–º –≤ —Ñ–∞–π–ª)
        file_handler = RotatingFileHandler("parser.log", maxBytes=5_000_000, backupCount=3)
        file_handler.setLevel(logging.DEBUG)  # –í —Ñ–∞–π–ª –ø–∏—à–µ–º –í–°–ï —É—Ä–æ–≤–Ω–∏ –ª–æ–≥–æ–≤
        file_handler.setFormatter(file_formatter)

        # üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏ (—Ç–æ–ª—å–∫–æ INFO+)
        console_handler = logging.StreamHandler()
        console_handler.setLevel(logging.INFO)  # –í –∫–æ–Ω—Å–æ–ª—å –ø–∏—à–µ–º —Ç–æ–ª—å–∫–æ INFO –∏ –≤—ã—à–µ
        console_handler.setFormatter(console_formatter)

        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤ –ª–æ–≥–≥–µ—Ä
        self.logger.addHandler(file_handler)
        self.logger.addHandler(console_handler)

    def get_logger(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ª–æ–≥–≥–µ—Ä–∞."""
        return self.logger


# –°–æ–∑–¥–∞–Ω–∏–µ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –ª–æ–≥–≥–µ—Ä–∞
parser_logger = Logger().get_logger()

# # üìå –£–†–û–í–ù–ò –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø:
#
# # 1Ô∏è‚É£ DEBUG (—É—Ä–æ–≤–µ–Ω—å 10) ‚Äì –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∫–æ–¥–∞
# parser_logger.debug("–û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è X = 42")
#
# # 2Ô∏è‚É£ INFO (—É—Ä–æ–≤–µ–Ω—å 20) ‚Äì –û—Å–Ω–æ–≤–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã
# parser_logger.info("–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–ø—É—â–µ–Ω–∞")
#
# # 3Ô∏è‚É£ WARNING (—É—Ä–æ–≤–µ–Ω—å 30) ‚Äì –í–æ–∑–º–æ–∂–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–∞, –Ω–æ —Ç—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è
# parser_logger.warning("–í–Ω–∏–º–∞–Ω–∏–µ: –î–æ–ª–≥–æ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞")
#
# # 4Ô∏è‚É£ ERROR (—É—Ä–æ–≤–µ–Ω—å 40) ‚Äì –û—à–∏–±–∫–∞, –Ω–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å
# parser_logger.error("–û—à–∏–±–∫–∞: –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
#
# # 5Ô∏è‚É£ CRITICAL (—É—Ä–æ–≤–µ–Ω—å 50) ‚Äì –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞, –≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã
# parser_logger.critical("–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –û—Ç–∫–∞–∑ —Å–∏—Å—Ç–µ–º—ã!")
#
# # 6Ô∏è‚É£ EXCEPTION (—É—Ä–æ–≤–µ–Ω—å 40, –Ω–æ —Å traceback) ‚Äì –õ–æ–≥–∏—Ä—É–µ—Ç –æ—à–∏–±–∫—É —Å –ø–æ–ª–Ω—ã–º traceback
# try:
#     1 / 0  # –î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å –≤—ã–∑–æ–≤–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
# except Exception as e:
#     parser_logger.exception("–ò—Å–∫–ª—é—á–µ–Ω–∏–µ: –û—à–∏–±–∫–∞ –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å")
